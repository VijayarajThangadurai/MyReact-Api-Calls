{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\Downloads\\\\002 01-starting-project (2)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setmovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  const [error, setError] = useState(null);\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const cancelRetryHandler = event => {\n    console.log(isCancelled);\n    setIsCancelled(true);\n    setRetryCount(0);\n  };\n  async function fetchMoviesHandler() {\n    // setIsLoading(true);\n    setIsClicked(true);\n    if (!isCancelled) {\n      console.log(\"s\");\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(\"https://swapi.dev/api/films\");\n        if (!response.ok) {\n          throw new Error(\"Something Went Wrong... Retrying\");\n        }\n        const data = await response.json();\n        const trasnformedMovies = data.results.map(movieData => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date\n          };\n        });\n        setmovies(trasnformedMovies);\n      } catch (error) {\n        setError(error.message);\n        setRetryCount(retryCount + 1);\n      }\n      setIsLoading(false);\n    }\n  }\n  useEffect(() => {\n    setTimeout(() => {\n      if (retryCount > 0) {\n        fetchMoviesHandler();\n      }\n    }, 5000);\n  }, [retryCount]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 14\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n  if (isCancelled && error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isClicked && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [content, error && !isCancelled && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelRetryHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kqC2Lqk+ht1svWhuXmrKansQHtU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setmovies","isLoading","setIsLoading","isClicked","setIsClicked","error","setError","isCancelled","setIsCancelled","retryCount","setRetryCount","cancelRetryHandler","event","console","log","fetchMoviesHandler","response","fetch","ok","Error","data","json","trasnformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","setTimeout","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vijay/Downloads/002 01-starting-project (2)/01-starting-project/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies,setmovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isClicked, setIsClicked]= useState(false);\n  const [error, setError]= useState(null);\n  const [isCancelled, setIsCancelled]= useState(false);\n  const [retryCount, setRetryCount]= useState(0);\n\n  const cancelRetryHandler = (event)=>{\n    console.log(isCancelled);\n    setIsCancelled(true);\n    setRetryCount(0);\n  }\n\nasync function fetchMoviesHandler() {\n  // setIsLoading(true);\n  setIsClicked(true);\n  if(!isCancelled){\n    console.log(\"s\");\n    setIsLoading(true);\n    setError(null);\n  try{\n   const response = await fetch(\"https://swapi.dev/api/films\")\n   if(!response.ok){\n    throw new Error(\"Something Went Wrong... Retrying\");\n   }\n  const data = await response.json();\n  const trasnformedMovies= data.results.map((movieData)=>{\n    return {\n      id: movieData.episode_id,\n      title: movieData.title,\n      openingText: movieData.opening_crawl,\n      releaseDate:movieData.release_date,\n    };\n  });\n  setmovies(trasnformedMovies);\n}catch (error){\n  setError(error.message);\n  setRetryCount(retryCount+ 1);\n}\n  setIsLoading(false);\n}\n}\nuseEffect(()=>{\n  setTimeout(()=>{\n    if(retryCount>0){\n      fetchMoviesHandler();\n    }\n  },5000)\n}, [retryCount]);\nlet content =<p>{error}</p>\nif (movies.length > 0){\n  content = <MoviesList movies={movies}/>;\n}\nif(error){\n  content = <p>{error}</p>;\n}\nif(isLoading){\n  content = <p>Loading...</p>;\n}\nif(isCancelled && error){\n  content = <p>{error}</p>;\n}\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      {/* { isClicked && <section>\n        {!isLoading && movies.length>0 && <MoviesList movies={movies}/>}\n        {!isLoading && movies.length===0 && <p>Found no movies</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>} */}\n      {isClicked && (\n        <section>\n          {content}\n          {error && !isCancelled && <button onClick={cancelRetryHandler}>Cancel</button>}\n        </section>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}